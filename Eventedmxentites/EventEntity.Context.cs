//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eventedmxentites
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EventManagementEntities : DbContext
    {
        public EventManagementEntities()
            : base("name=EventManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C_Room> C_Room { get; set; }
        public virtual DbSet<Event_Reg> Event_Reg { get; set; }
        public virtual DbSet<organizer> organizers { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<sponcer> sponcers { get; set; }
        public virtual DbSet<User_Mgt> User_Mgt { get; set; }
        public virtual DbSet<Schedule_Event> Schedule_Event { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int createusers(Nullable<int> user_Id, string user_Name, Nullable<long> mobile_Number, string email, string password, string person_type, string per_status)
        {
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var user_NameParameter = user_Name != null ?
                new ObjectParameter("User_Name", user_Name) :
                new ObjectParameter("User_Name", typeof(string));
    
            var mobile_NumberParameter = mobile_Number.HasValue ?
                new ObjectParameter("Mobile_Number", mobile_Number) :
                new ObjectParameter("Mobile_Number", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var person_typeParameter = person_type != null ?
                new ObjectParameter("Person_type", person_type) :
                new ObjectParameter("Person_type", typeof(string));
    
            var per_statusParameter = per_status != null ?
                new ObjectParameter("Per_status", per_status) :
                new ObjectParameter("Per_status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createusers", user_IdParameter, user_NameParameter, mobile_NumberParameter, emailParameter, passwordParameter, person_typeParameter, per_statusParameter);
        }
    
        public virtual ObjectResult<selectevent_Result> selectevent(Nullable<int> e_Id)
        {
            var e_IdParameter = e_Id.HasValue ?
                new ObjectParameter("E_Id", e_Id) :
                new ObjectParameter("E_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectevent_Result>("selectevent", e_IdParameter);
        }
    
        public virtual ObjectResult<selecteventt_Result> selecteventt(Nullable<int> e_Id)
        {
            var e_IdParameter = e_Id.HasValue ?
                new ObjectParameter("E_Id", e_Id) :
                new ObjectParameter("E_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selecteventt_Result>("selecteventt", e_IdParameter);
        }
    
        public virtual ObjectResult<SelectRoom_Result> SelectRoom(Nullable<int> room_Id)
        {
            var room_IdParameter = room_Id.HasValue ?
                new ObjectParameter("Room_Id", room_Id) :
                new ObjectParameter("Room_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRoom_Result>("SelectRoom", room_IdParameter);
        }
    
        public virtual ObjectResult<selectsponcers_Result> selectsponcers(Nullable<int> s_Id)
        {
            var s_IdParameter = s_Id.HasValue ?
                new ObjectParameter("S_Id", s_Id) :
                new ObjectParameter("S_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectsponcers_Result>("selectsponcers", s_IdParameter);
        }
    
        public virtual ObjectResult<selectusers_Result> selectusers(Nullable<int> user_Id)
        {
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectusers_Result>("selectusers", user_IdParameter);
        }
    
        public virtual int updateevent(Nullable<int> e_Id, string e_Name, string e_Description, Nullable<System.DateTime> e_SDate, Nullable<System.DateTime> e_EDate, string e_Venue, string e_LocationLink, string e_Type, string e_Mode, Nullable<int> e_Seat, string e_RegisterLink, string e_BannerImg, string e_Icon, string e_FloorMap, Nullable<System.TimeSpan> e_Stime, Nullable<System.TimeSpan> e_Etime)
        {
            var e_IdParameter = e_Id.HasValue ?
                new ObjectParameter("E_Id", e_Id) :
                new ObjectParameter("E_Id", typeof(int));
    
            var e_NameParameter = e_Name != null ?
                new ObjectParameter("E_Name", e_Name) :
                new ObjectParameter("E_Name", typeof(string));
    
            var e_DescriptionParameter = e_Description != null ?
                new ObjectParameter("E_Description", e_Description) :
                new ObjectParameter("E_Description", typeof(string));
    
            var e_SDateParameter = e_SDate.HasValue ?
                new ObjectParameter("E_SDate", e_SDate) :
                new ObjectParameter("E_SDate", typeof(System.DateTime));
    
            var e_EDateParameter = e_EDate.HasValue ?
                new ObjectParameter("E_EDate", e_EDate) :
                new ObjectParameter("E_EDate", typeof(System.DateTime));
    
            var e_VenueParameter = e_Venue != null ?
                new ObjectParameter("E_Venue", e_Venue) :
                new ObjectParameter("E_Venue", typeof(string));
    
            var e_LocationLinkParameter = e_LocationLink != null ?
                new ObjectParameter("E_LocationLink", e_LocationLink) :
                new ObjectParameter("E_LocationLink", typeof(string));
    
            var e_TypeParameter = e_Type != null ?
                new ObjectParameter("E_Type", e_Type) :
                new ObjectParameter("E_Type", typeof(string));
    
            var e_ModeParameter = e_Mode != null ?
                new ObjectParameter("E_Mode", e_Mode) :
                new ObjectParameter("E_Mode", typeof(string));
    
            var e_SeatParameter = e_Seat.HasValue ?
                new ObjectParameter("E_Seat", e_Seat) :
                new ObjectParameter("E_Seat", typeof(int));
    
            var e_RegisterLinkParameter = e_RegisterLink != null ?
                new ObjectParameter("E_RegisterLink", e_RegisterLink) :
                new ObjectParameter("E_RegisterLink", typeof(string));
    
            var e_BannerImgParameter = e_BannerImg != null ?
                new ObjectParameter("E_BannerImg", e_BannerImg) :
                new ObjectParameter("E_BannerImg", typeof(string));
    
            var e_IconParameter = e_Icon != null ?
                new ObjectParameter("E_Icon", e_Icon) :
                new ObjectParameter("E_Icon", typeof(string));
    
            var e_FloorMapParameter = e_FloorMap != null ?
                new ObjectParameter("E_FloorMap", e_FloorMap) :
                new ObjectParameter("E_FloorMap", typeof(string));
    
            var e_StimeParameter = e_Stime.HasValue ?
                new ObjectParameter("E_Stime", e_Stime) :
                new ObjectParameter("E_Stime", typeof(System.TimeSpan));
    
            var e_EtimeParameter = e_Etime.HasValue ?
                new ObjectParameter("E_Etime", e_Etime) :
                new ObjectParameter("E_Etime", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateevent", e_IdParameter, e_NameParameter, e_DescriptionParameter, e_SDateParameter, e_EDateParameter, e_VenueParameter, e_LocationLinkParameter, e_TypeParameter, e_ModeParameter, e_SeatParameter, e_RegisterLinkParameter, e_BannerImgParameter, e_IconParameter, e_FloorMapParameter, e_StimeParameter, e_EtimeParameter);
        }
    
        public virtual int updateroom(Nullable<int> room_ID, string name, string description, string venue, string location, string type, string equipment, Nullable<int> seat, string room_Img)
        {
            var room_IDParameter = room_ID.HasValue ?
                new ObjectParameter("Room_ID", room_ID) :
                new ObjectParameter("Room_ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var venueParameter = venue != null ?
                new ObjectParameter("Venue", venue) :
                new ObjectParameter("Venue", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var equipmentParameter = equipment != null ?
                new ObjectParameter("Equipment", equipment) :
                new ObjectParameter("Equipment", typeof(string));
    
            var seatParameter = seat.HasValue ?
                new ObjectParameter("Seat", seat) :
                new ObjectParameter("Seat", typeof(int));
    
            var room_ImgParameter = room_Img != null ?
                new ObjectParameter("Room_Img", room_Img) :
                new ObjectParameter("Room_Img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateroom", room_IDParameter, nameParameter, descriptionParameter, venueParameter, locationParameter, typeParameter, equipmentParameter, seatParameter, room_ImgParameter);
        }
    
        public virtual int updatesponcer(Nullable<int> s_Id, string first_name, string last_name, string description, string website, string em, Nullable<long> phone, string logo)
        {
            var s_IdParameter = s_Id.HasValue ?
                new ObjectParameter("S_Id", s_Id) :
                new ObjectParameter("S_Id", typeof(int));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("First_name", first_name) :
                new ObjectParameter("First_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("Last_name", last_name) :
                new ObjectParameter("Last_name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var emParameter = em != null ?
                new ObjectParameter("Em", em) :
                new ObjectParameter("Em", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatesponcer", s_IdParameter, first_nameParameter, last_nameParameter, descriptionParameter, websiteParameter, emParameter, phoneParameter, logoParameter);
        }
    
        public virtual ObjectResult<GetEventDetails_Result> GetEventDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventDetails_Result>("GetEventDetails");
        }
    
        public virtual ObjectResult<GetEventRegistrationDetails_Result> GetEventRegistrationDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventRegistrationDetails_Result>("GetEventRegistrationDetails");
        }
    
        public virtual ObjectResult<ScheduleOrganizer_Result> ScheduleOrganizer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ScheduleOrganizer_Result>("ScheduleOrganizer");
        }
    
        public virtual ObjectResult<ScheduleRoom_Result> ScheduleRoom()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ScheduleRoom_Result>("ScheduleRoom");
        }
    
        public virtual ObjectResult<ScheduleSponcer_Result> ScheduleSponcer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ScheduleSponcer_Result>("ScheduleSponcer");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateSchedule(Nullable<int> s_Id, string s_Event, string s_Description, Nullable<System.DateTime> s_Sdate, Nullable<System.DateTime> s_Edate, Nullable<System.TimeSpan> s_Stime, Nullable<System.TimeSpan> s_Etime, string s_Venue, string s_Room, string s_Sponsor, string s_Organizer)
        {
            var s_IdParameter = s_Id.HasValue ?
                new ObjectParameter("S_Id", s_Id) :
                new ObjectParameter("S_Id", typeof(int));
    
            var s_EventParameter = s_Event != null ?
                new ObjectParameter("S_Event", s_Event) :
                new ObjectParameter("S_Event", typeof(string));
    
            var s_DescriptionParameter = s_Description != null ?
                new ObjectParameter("S_Description", s_Description) :
                new ObjectParameter("S_Description", typeof(string));
    
            var s_SdateParameter = s_Sdate.HasValue ?
                new ObjectParameter("S_Sdate", s_Sdate) :
                new ObjectParameter("S_Sdate", typeof(System.DateTime));
    
            var s_EdateParameter = s_Edate.HasValue ?
                new ObjectParameter("S_Edate", s_Edate) :
                new ObjectParameter("S_Edate", typeof(System.DateTime));
    
            var s_StimeParameter = s_Stime.HasValue ?
                new ObjectParameter("S_Stime", s_Stime) :
                new ObjectParameter("S_Stime", typeof(System.TimeSpan));
    
            var s_EtimeParameter = s_Etime.HasValue ?
                new ObjectParameter("S_Etime", s_Etime) :
                new ObjectParameter("S_Etime", typeof(System.TimeSpan));
    
            var s_VenueParameter = s_Venue != null ?
                new ObjectParameter("S_Venue", s_Venue) :
                new ObjectParameter("S_Venue", typeof(string));
    
            var s_RoomParameter = s_Room != null ?
                new ObjectParameter("S_Room", s_Room) :
                new ObjectParameter("S_Room", typeof(string));
    
            var s_SponsorParameter = s_Sponsor != null ?
                new ObjectParameter("S_Sponsor", s_Sponsor) :
                new ObjectParameter("S_Sponsor", typeof(string));
    
            var s_OrganizerParameter = s_Organizer != null ?
                new ObjectParameter("S_Organizer", s_Organizer) :
                new ObjectParameter("S_Organizer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSchedule", s_IdParameter, s_EventParameter, s_DescriptionParameter, s_SdateParameter, s_EdateParameter, s_StimeParameter, s_EtimeParameter, s_VenueParameter, s_RoomParameter, s_SponsorParameter, s_OrganizerParameter);
        }
    }
}
